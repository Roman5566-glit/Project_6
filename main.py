import pygame
import sys
import time

pygame.init()
screen = pygame.display.set_mode((0, 0), pygame.FULLSCREEN)  # –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
WIDTH, HEIGHT = screen.get_width(), screen.get_height()
pygame.display.set_caption("HackSim 2077")

font = pygame.font.Font(None, 28)
input_text = ""
log = []
mission_index = 0
start_time = time.time()
mission_timer = 120  # —Å–µ–∫—É–Ω–¥ –Ω–∞ –º–∏—Å—Å–∏—é
scroll_offset = 0  # –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

# –ó–≤—É–∫ –∫–ª–∞–≤–∏—à (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
try:
    beep = pygame.mixer.Sound("assets/beep.wav")
except:
    beep = None

missions = [
    {
        "intro": ["–ú–∏—Å—Å–∏—è 1: –í–∑–ª–æ–º–∞—Ç—å —Å–µ—Ä–≤–µ—Ä 'OmegaCorp'.", "–í–≤–µ–¥–∏—Ç–µ: connect OmegaCorp"],
        "steps": {
            "connect OmegaCorp": "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ: scan_ports",
            "scan_ports": "–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã: 22, 80, 443. –í–≤–µ–¥–∏—Ç–µ: brute_force 22",
            "brute_force 22": "–ü–∞—Ä–æ–ª—å –Ω–∞–π–¥–µ–Ω: hunter2. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 2: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö 'NovaNet'.", "–í–≤–µ–¥–∏—Ç–µ: ping NovaNet"],
        "steps": {
            "ping NovaNet": "–°–µ—Ç—å –∞–∫—Ç–∏–≤–Ω–∞. –í–≤–µ–¥–∏—Ç–µ: inject_payload",
            "inject_payload": "Payload –≤–Ω–µ–¥—Ä—ë–Ω. –í–≤–µ–¥–∏—Ç–µ: decrypt_key",
            "decrypt_key": "–ö–ª—é—á —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω: NOVA-77. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 3: –í–∑–ª–æ–º–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –Ω–∞–±–ª—é–¥–µ–Ω–∏—è 'EyeWatch'.", "–í–≤–µ–¥–∏—Ç–µ: override_camera"],
        "steps": {
            "override_camera": "–ö–∞–º–µ—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã. –í–≤–µ–¥–∏—Ç–µ: access_feed",
            "access_feed": "–ü–æ–ª—É—á–µ–Ω –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫. –í–≤–µ–¥–∏—Ç–µ: extract_frames",
            "extract_frames": "–ö–∞–¥—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 4: –í–∑–ª–æ–º–∞—Ç—å –¥—Ä–æ–Ω 'SkyRider'.", "–í–≤–µ–¥–∏—Ç–µ: locate_drone"],
        "steps": {
            "locate_drone": "–î—Ä–æ–Ω –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ: hijack_signal",
            "hijack_signal": "–°–∏–≥–Ω–∞–ª –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω. –í–≤–µ–¥–∏—Ç–µ: redirect_path",
            "redirect_path": "–î—Ä–æ–Ω –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 5: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞—Ä—Ö–∏–≤—É 'DeepVault'.", "–í–≤–µ–¥–∏—Ç–µ: unlock_archive"],
        "steps": {
            "unlock_archive": "–ê—Ä—Ö–∏–≤ –æ—Ç–∫—Ä—ã—Ç. –í–≤–µ–¥–∏—Ç–µ: scan_documents",
            "scan_documents": "–î–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ: download_all",
            "download_all": "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 6: –í–∑–ª–æ–º–∞—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª 'BlackBox'.", "–í–≤–µ–¥–∏—Ç–µ: connect BlackBox"],
        "steps": {
            "connect BlackBox": "–¢–µ—Ä–º–∏–Ω–∞–ª –ø–æ–¥–∫–ª—é—á—ë–Ω. –í–≤–µ–¥–∏—Ç–µ: run_diagnostics",
            "run_diagnostics": "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ: patch_kernel",
            "patch_kernel": "–Ø–¥—Ä–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 7: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–ø—É—Ç–Ω–∏–∫—É 'OrbNet'.", "–í–≤–µ–¥–∏—Ç–µ: ping OrbNet"],
        "steps": {
            "ping OrbNet": "–°–≤—è–∑—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ: align_frequency",
            "align_frequency": "–ß–∞—Å—Ç–æ—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ: stream_data",
            "stream_data": "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 8: –í–∑–ª–æ–º–∞—Ç—å —Å–µ—Ä–≤–µ—Ä 'GhostShell'.", "–í–≤–µ–¥–∏—Ç–µ: breach_firewall"],
        "steps": {
            "breach_firewall": "–ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä –æ–±–æ–π–¥—ë–Ω. –í–≤–µ–¥–∏—Ç–µ: inject_ghost",
            "inject_ghost": "–ü—Ä–∏–∑—Ä–∞–∫ –≤–Ω–µ–¥—Ä—ë–Ω. –í–≤–µ–¥–∏—Ç–µ: erase_logs",
            "erase_logs": "–°–ª–µ–¥—ã —É–¥–∞–ª–µ–Ω—ã. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 9: –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ 'QuantumCore'.", "–í–≤–µ–¥–∏—Ç–µ: access_core"],
        "steps": {
            "access_core": "–î–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω. –í–≤–µ–¥–∏—Ç–µ: decode_matrix",
            "decode_matrix": "–ú–∞—Ç—Ä–∏—Ü–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞. –í–≤–µ–¥–∏—Ç–µ: extract_code",
            "extract_code": "–ö–æ–¥ –∏–∑–≤–ª–µ—á—ë–Ω. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    },
    {
        "intro": ["–ú–∏—Å—Å–∏—è 10: –í–∑–ª–æ–º–∞—Ç—å —Å–∏—Å—Ç–µ–º—É 'FinalGate'.", "–í–≤–µ–¥–∏—Ç–µ: initiate_protocol"],
        "steps": {
            "initiate_protocol": "–ü—Ä–æ—Ç–æ–∫–æ–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–≤–µ–¥–∏—Ç–µ: bypass_gate",
            "bypass_gate": "–í–æ—Ä–æ—Ç–∞ –æ–±–æ–π–¥–µ–Ω—ã. –í–≤–µ–¥–∏—Ç–µ: shutdown_system",
            "shutdown_system": "–°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞. –ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"
        }
    }
]

def draw_terminal():
    screen.fill((10, 10, 10))
    visible_lines = (HEIGHT - 80) // 30  # –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
    start_index = max(0, len(log) - visible_lines - scroll_offset)
    end_index = len(log) - scroll_offset
    y = 20
    for line in log[start_index:end_index]:
        rendered = font.render(line, True, (0, 255, 0))
        screen.blit(rendered, (20, y))
        y += 30
    input_render = font.render("> " + input_text, True, (0, 255, 0))
    screen.blit(input_render, (20, HEIGHT - 40))

    # –¢–∞–π–º–µ—Ä
    elapsed = int(time.time() - start_time)
    remaining = max(0, mission_timer - elapsed)
    timer_render = font.render(f"‚è±Ô∏è –í—Ä–µ–º—è: {remaining}s", True, (255, 100, 100))
    screen.blit(timer_render, (WIDTH - 200, 20))

    pygame.display.flip()

def process_command(cmd):
    global mission_index, start_time, scroll_offset

    if mission_index >= len(missions):
        log.append("‚úÖ –í—Å–µ –º–∏—Å—Å–∏–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π.")
        return

    mission = missions[mission_index]
    steps = mission["steps"]
    if cmd in steps:
        log.append(steps[cmd])
        if "–ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!" in steps[cmd]:
            mission_index += 1
            if mission_index < len(missions):
                log.append("")
                log.append(f"--- –ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–∏—Å—Å–∏–∏ {mission_index + 1} ---")
                log.extend(missions[mission_index]["intro"])
                start_time = time.time()
            else:
                log.append("")
                log.append("üéâ –í—Å–µ –º–∏—Å—Å–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –¢—ã ‚Äî –ª–µ–≥–µ–Ω–¥–∞ —Ö–∞–∫–µ—Ä—Å–∫–æ–≥–æ –º–∏—Ä–∞.")
    else:
        log.append(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {cmd}")
    scroll_offset = 0  # —Å–±—Ä–æ—Å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
log.append("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HackSim 2077.")
log.extend(missions[0]["intro"])

running = True
while running:
    draw_terminal()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        elif event.type == pygame.KEYDOWN:
            if beep: beep.play()
            if event.key == pygame.K_RETURN:
                log.append("> " + input_text)
                process_command(input_text.strip())
                input_text = ""
            elif event.key == pygame.K_BACKSPACE:
                input_text = input_text[:-1]
            elif event.key == pygame.K_ESCAPE:
                running = False  # –≤—ã—Ö–æ–¥ –ø–æ ESC
            elif event.key == pygame.K_PAGEUP:
                scroll_offset = min(scroll_offset + 5, len(log) - 1)
            elif event.key == pygame.K_PAGEDOWN:
                scroll_offset = max(scroll_offset - 5, 0)
            else:
                input_text += event.unicode

        elif event.type == pygame.MOUSEWHEEL:
            scroll_offset -= event.y  # –≤–≤–µ—Ä—Ö = +1, –≤–Ω–∏–∑ = -1
            scroll_offset = max(0, min(scroll_offset, len(log) - 1))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–µ—Ä–∞
    if mission_index < len(missions) and time.time() - start_time > mission_timer:
        log.append("‚õî –í—Ä–µ–º—è –≤—ã—à–ª–æ. –ú–∏—Å—Å–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞.")
        mission_index += 1
        if mission_index < len(missions):
            log.append("")
            log.append(f"--- –ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–∏—Å—Å–∏–∏ {mission_index + 1} ---")
            log.extend(missions[mission_index]["intro"])
            start_time = time.time()
        else:
            log.append("")
            log.append("üéâ –í—Å–µ –º–∏—Å—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–∞–ª–µ–Ω—ã, –Ω–æ —Ç—ã –¥–æ—à—ë–ª –¥–æ –∫–æ–Ω—Ü–∞!")

pygame.quit()
sys.exit()